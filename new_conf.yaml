db_url: http://localhost:27109

jwt:
    secret: ''
    algorithms: [H256]
    role_key: X-Mongoko-Role

skema: |
    User:
        type: "user"
        _id: ID
        name: Str
        surname: Str
        friends_ids: [ID]
    Guest:
        type: "guest"
        _id: ObjectId
        name: Str
    WindowedEvent:
        value: Int
        timestamp: Int
    ObjectId: Any # this will be added implicetly
    ID: Any
    Human: User | Guest


types:
-   exposed: false
    type_name: User
    collection: users
    guards:
        -   when: after
            expression: headers['user-id'] == x['_id']
-   exposed: false
    type_name: WindowedEvent
    collection: events
    pipeline:
-   exposed: false
    type_name: Event
    collection: events
    guards:
        -   when: after
            expression: headers['user-id'] == x['_id']
-   type_name: Human
    collection: humans
    guards:
        before:
            expression: >
                headers['user-id'] == where['_id']
                or jwt_payload['user_id'] == 'ciao'
            fields: [name, surname]
    disambiguations:
        -   type_name: User
            expression: "'surname' in x"
        -   type_name: Guest
            expression: "x['type'] == 'guest'"
    relations:
        -   field: friends
            type_name: Human
            relation_type: to_many
            pipeline:
                -   $match:
                        _id:
                            $in: "parent['friends_ids']"
        -   field: likes_over_time
            type_name: WindowedEvent
            relation_type: to_many
            collection: events
            pipeline:
                -   $match:
                        type: like
                        bot_id:
                            $in: ${ parent['_id'] }
                -   $group:
                        _id:
                            $substartct:
                                - $timestamp
                                - $mod: [$timestamp, 60000] # minute 60 * 1000
                        value:
                            $sum: $likes
                -   $project:
                        _id: 0
                        value: 1
                        timestamp: $_id
        -   field: father
            type_name: User
            collection: users
            relation_type: to_one
            where:
                _id:
                    $in: ${ parent['father_id'] }


