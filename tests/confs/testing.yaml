

jwt:
    secret: 'xxx'
    algorithms: [H256]

schema_path: schema.graphql

types:
    User:
        exposed: False
        collection: users
    Bot:
        collection: bots
        pipeline:
            - $set:
                user_id: fucku
        # guards:
        #     -   expression: where.get('user_id') == jwt.get('user_id')
        #         excluded: ["ciao"]
        #         when: before
            # -   expression: x['user_id'] == where.get('_id')
            #     excluded: ["ciao"]
            #     when: after
    Campaign:
        collection: campaigns
        disambiguations:
            MessageCampaign: >
                'messages' in x
            PostCampaign: >
                'posts' in x
        pipeline:
            - $project:
                _id: 0
                username: 0
    EventWindow:
        exposed: False
        collection: events
        pipeline:
            -   $group:
                    _id:
                        $subtract:
                            - $timestamp
                            - $mod: [$timestamp, 10] # minute 60 * 1000
                    value: 
                        $sum:
                            $value
            
            -   $project:
                    timestamp: $_id
                    value: 1

relations:
    -   from: Bot
        to: EventWindow
        relation_type: to_many
        field: likes_over_time
        where: {}
    -   from: Bot
        to: User
        field: user
        relation_type: to_one
        where:
            _id: ${{ parent.get('_id') }}




            